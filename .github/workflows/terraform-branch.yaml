name: Terraform workflow
run-name: Terraform plan workflow
env:
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
on:
  push:
    branches:
      - '**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  Terraform-Init:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - uses: actions/cache@v4
        with:
          path: |
            .terraform
            .terraform.lock.hcl
          key: terraform-init-dir

      - name: Init
        id: init
        run: terraform init

      - run: ls -la

  Terraform-Validate:
    needs: Terraform-Init
    runs-on: ubuntu-latest
    steps:

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache/restore@v4
        with:
          path: |
            .terraform
            .terraform.lock.hcl
          key: terraform-init-dir

      - name: Validate
        id: validate
        run: |
          terraform validate -no-color
          if [ $? -ne 0 ]; then
            echo "## :bangbang: Validation failed.  Check the logs" >> $GITHUB_STEP_SUMMARY
          else
            echo "## :white_check_mark: Success! The configuration is valid." >> $GITHUB_STEP_SUMMARY
          fi

  Terraform-Plan:
    needs: Terraform-Validate
    runs-on: ubuntu-latest
    steps:

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache/restore@v4
        with:
          path: |
            .terraform
            .terraform.lock.hcl
          key: terraform-init-dir

      - name: Plan
        id: plan
        run: terraform plan -input=false -no-color -out=terraform_plan.tfplan | tee terraform_plan.txt

      - uses: actions/cache@v4
        with:
          path: |
            .terraform
            .terraform.lock.hcl
            terraform_plan.tfplan
          key: terraform-init-dir

      - name: Terraform apply summary
        id: plan_summary
        run: |
          {
            echo '## Terraform plan summary'
            awk '($0 ~ "Plan:"){print $0}' terraform_plan.txt | sed 's/#//g'
            echo "<details><summary>Expand for Terraform plan full output</summary><p>"
            awk 'BEGIN{to_print=0};($0 ~ "Terraform will perform"){to_print=1};($0 ~ "Plan:"){exit 0};(to_print == 1){print $0}' terraform_plan.txt
            echo "</p></details>"
          } >> ${GITHUB_STEP_SUMMARY}

  Terraform-Apply:
    needs: Terraform-Plan
    environment:
      name: manual-approve
    runs-on: ubuntu-latest
    steps:

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache/restore@v4
        with:
          path: |
            .terraform
            .terraform.lock.hcl
            terraform_plan.tfplan
          key: terraform-init-dir

      - run: ls -la

      - name: Apply
        id: apply
        run: terraform apply -no-color -auto-approve terraform_plan.tfplan | tee terraform_apply.txt

      - name: Terraform apply summary
        id: apply_summary
        run: |
          {
            echo '## Terraform apply summary'
            awk '($0 ~ "Apply complete!"){for(i=3;i<NF;i++)printf $i " ";printf $NF}' terraform_apply.txt
            echo "<details><summary>Expand for Terraform apply full output</summary><p>"
            awk 'BEGIN{to_print=1};($0 ~ "Apply complete!"){exit 0};(to_print == 1){print $0}' terraform_apply.txt
            echo "</p></details>"
          } >> ${GITHUB_STEP_SUMMARY}
